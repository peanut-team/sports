// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/mc/v1/account/:username": {
            "get": {
                "description": "传入 username，根据用户名查询用户",
                "summary": "获取用户信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nick",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errs.BasicError"
                        }
                    }
                }
            }
        },
        "/api/v1/coach/training": {
            "get": {
                "description": "实时训练数据",
                "summary": "获取实时训练数据",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coach.AthleteTraining"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errs.BasicError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "account.User": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "邮箱",
                    "type": "string",
                    "example": "123@ee.com"
                },
                "password": {
                    "description": "密码",
                    "type": "string",
                    "example": "123@password"
                },
                "username": {
                    "description": "用户名",
                    "type": "string",
                    "example": "mick"
                }
            }
        },
        "coach.AthleteTraining": {
            "type": "object",
            "properties": {
                "acceleration": {
                    "description": "功率（加速度）",
                    "type": "number"
                },
                "athlete_id": {
                    "description": "运动员ID",
                    "type": "integer"
                },
                "athlete_name": {
                    "description": "运动员姓名",
                    "type": "string"
                },
                "athlete_training_status": {
                    "type": "boolean"
                },
                "average_speed": {
                    "description": "平均时速",
                    "type": "number"
                },
                "distance": {
                    "description": "距离（路程）",
                    "type": "number"
                },
                "instantaneous_propeller_speed": {
                    "description": "瞬时桨速",
                    "type": "number"
                },
                "instantaneous_speed": {
                    "description": "瞬时时速",
                    "type": "number"
                },
                "sport_img": {
                    "description": "运动员头像",
                    "type": "string"
                },
                "status": {
                    "description": "当前状态",
                    "type": "string"
                },
                "stroke": {
                    "description": "划行距离",
                    "type": "number"
                },
                "total_oars": {
                    "description": "总桨数",
                    "type": "integer"
                }
            }
        },
        "errs.BasicError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
